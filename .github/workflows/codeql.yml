name: "CodeQL Analysis for TypeScript"

on: pull_request

jobs:
  ci:
    name: "Continuous Integration (CI)"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x  # ✅ 최신 Node.js 버전 사용

      - name: Install dependencies
        run: npm ci  # ✅ 의존성 설치

      - name: Lint Check
        run: npm run lint  # ✅ ESLint 실행

      - name: Build Vite project
        run: npm run build  # ✅ Vite 프로젝트 빌드 실행

      - name: Run Tests
        run: npm test  # ✅ Jest/Vitest 테스트 실행

  analyze:
    name: "CodeQL Analysis"
    needs: ci  # ✅ CI가 통과해야 CodeQL 실행 (CI 실패 시 CodeQL 실행 안 함)
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      pull-requests: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [typescript]  # ✅ TypeScript 코드만 분석

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm ci

      - name: Build Vite project
        run: npm run build

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality
          paths-ignore: |
            node_modules/
            dist/

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: Check for Code Scanning Alerts
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request?.number;

            if (!prNumber) {
              console.log("PR이 아닙니다. 코멘트를 추가하지 않습니다.");
              return;
            }

            const alerts = await github.request('GET /repos/{owner}/{repo}/code-scanning/alerts', {
              owner: owner,
              repo: repo
            });

            if (alerts.data.length > 0) {
              const message = `⚠️ CodeQL 분석에서 **${alerts.data.length}개의 보안 취약점**이 발견되었습니다.  
              [Code scanning alerts](https://github.com/${owner}/${repo}/security/code-scanning)에서 자세한 내용을 확인하세요.`;

              await github.pulls.createReview({
                owner,
                repo,
                pull_number: prNumber,
                event: "COMMENT",
                body: message
              });

              console.log("PR에 보안 취약점 경고 코멘트를 추가했습니다.");
            } else {
              console.log("보안 취약점이 발견되지 않았습니다. PR에 코멘트를 추가하지 않습니다.");
            }
